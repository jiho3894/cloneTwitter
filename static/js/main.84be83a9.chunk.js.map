{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","alt","src","width","height","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createAt","Date","now","creatorId","collection","add","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","nweetArray","docs","map","Navigation","to","displayName","Profile","refreshUser","newDisplayName","setNewDisplayName","history","useHistory","updateProfile","signOut","push","RouterHandle","isLoggedIn","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.84be83a9.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\n\r\nexport const dbService = firebase.firestore();\r\n\r\nexport const storageService = firebase.storage();","import { authService } from 'fbase';\r\nimport React, { useState } from 'react';\r\n\r\nconst AuthForm = () => {\r\n  const [email , setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const onChange = (event) => {\r\n    const {target: {name, value}} = event;\r\n    if(name === \"email\") {\r\n      setEmail(value);\r\n    } else if(name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  }\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if(newAccount) {\r\n        data = await authService.createUserWithEmailAndPassword(email, password);\r\n      } else {\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n      console.log(data);\r\n    } catch(error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit}>\r\n        <input \r\n          name=\"email\" \r\n          type=\"text\" \r\n          placeholder=\"이메일\" \r\n          required value={email} \r\n          onChange={onChange}\r\n        />\r\n        <input \r\n          name=\"password\" \r\n          type=\"password\" \r\n          placeholder=\"비밀번호\" \r\n          required value={password} \r\n          onChange={onChange}\r\n        />\r\n        <input type=\"submit\" value={newAccount ? \"계정생성\" : \"로그인\"}/>\r\n        {error}\r\n      </form>\r\n      <span onClick={toggleAccount}>{!newAccount ? \"계정생성\" : \"로그인\"}</span>\r\n      </>\r\n  )\r\n}\r\nexport default AuthForm;","import AuthForm from 'components/AuthForm';\r\nimport { authService, firebaseInstance } from 'fbase';\r\nimport React from 'react';\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target : {name}\r\n    } = event;\r\n    let provider;\r\n    if(name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if(name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    await authService.signInWithPopup(provider);\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      <AuthForm />\r\n      <div>\r\n        <button onClick={onSocialClick} name=\"google\">구글 아이디로 로그인</button>\r\n        <button onClick={onSocialClick} name=\"github\">깃허브 아이디로 로그인</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Auth;","import React, { useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"삭제하시겠습니까?\");\r\n    if (ok) {\r\n      await dbService.doc(`nweet/${nweetObj.id}`).delete();\r\n      if(nweetObj.attachmentUrl !== \"\"){\r\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n      }\r\n    }\r\n  };\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`nweet/${nweetObj.id}`).update({\r\n      text: newNweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewNweet(value);\r\n  };\r\n  return (\r\n    <div>\r\n      {editing ? (\r\n        <>\r\n          {isOwner && (\r\n          <>\r\n            <form onSubmit={onSubmit}>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Edit your nweet\"\r\n                value={newNweet}\r\n                required\r\n                onChange={onChange}\r\n              />\r\n              <input type=\"submit\" value=\"Update Nweet\" />\r\n            </form>\r\n            <button onClick={toggleEditing}>Cancel</button>\r\n          </>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{nweetObj.text}</h4>\r\n          {nweetObj.attachmentUrl && <img alt=\"\" src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\"/> }\r\n          {isOwner && (\r\n            <>\r\n              <button onClick={onDeleteClick}>Delete Nweet</button>\r\n              <button onClick={toggleEditing}>Edit Nweet</button>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nweet;","import { dbService, storageService } from 'fbase';\r\nimport React, { useState } from 'react';\r\nimport {v4 as uuidv4 } from 'uuid';\r\n\r\nconst NweetFactory = ({userObj}) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if(attachment !== \"\"){\r\n      const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n    const response = await attachmentRef.putString(attachment, \"data_url\");\r\n    attachmentUrl = await response.ref.getDownloadURL();\r\n  }\r\n    const nweetObj = {\r\n      text: nweet,\r\n      createAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl\r\n    }\r\n    await dbService.collection(\"nweet\").add(nweetObj);\r\n    setNweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNweet(value);\r\n  };\r\n  const onFileChange = (event) => {\r\n    const {target: {files}} = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    if(theFile) {\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {currentTarget : {result}} = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n    }\r\n  }\r\n  const onClearPhotoClick = () => setAttachment(\"\");\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n        <input\r\n          value={nweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"file\" accept=\"image/*\" onChange={onFileChange}/>\r\n        <input type=\"submit\" value=\"Nweet\" />\r\n        {attachment && (\r\n          <div>\r\n            <img alt=\"\" src={attachment} width=\"50px\" height=\"50px\" />\r\n            <button onClick={onClearPhotoClick}>Clear</button>\r\n          </div>\r\n        )}\r\n      </form>\r\n  )\r\n}\r\nexport default NweetFactory;","import React, { useState, useEffect } from \"react\";\r\nimport { dbService } from \"fbase\";\r\nimport Nweet from 'components/Nweet';\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({userObj}) => {\r\n  const [nweets, setNweets] = useState([]);\r\n  useEffect(() => {\r\n    dbService.collection(\"nweet\").orderBy(\"createAt\",\"desc\").onSnapshot((snapshot) => {\r\n    const nweetArray = snapshot.docs.map((doc) => {\r\n    return { id: doc.id, ...doc.data() };\r\n    });\r\n      setNweets(nweetArray);\r\n    });\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <NweetFactory userObj={userObj} />\r\n      <div>\r\n        {nweets.map((nweet) => (\r\n          <Nweet \r\n          key={nweet.id} \r\n          nweetObj={nweet} \r\n          isOwner={nweet.creatorId === userObj.uid}/>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Home;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Navigation = ({userObj}) => (\r\n  <nav>\r\n    <ul>\r\n      <li>\r\n        <Link to=\"/\">Home</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/profile\">{userObj.displayName} Profile</Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n\r\n\r\n);\r\n\r\nexport default Navigation;","import { authService } from 'fbase';\r\nimport React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Profile = ({refreshUser,userObj}) => {\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const history = useHistory();\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n  const onChange = (event) => {\r\n    const { target : {value}} = event;\r\n    setNewDisplayName(value);\r\n  }\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if(userObj.displayName !== newDisplayName){\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n  }\r\n  return(\r\n    <>\r\n    <form onSubmit={onSubmit} >\r\n      <input \r\n      onChange={onChange} value={newDisplayName} type=\"text\" placeholder=\"Display name\" />\r\n      <input  type=\"submit\" value=\"Update Profile\" />\r\n    </form>\r\n      <button onClick={onLogOutClick}>Log Out</button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Auth from 'routes/Auth';\r\nimport Home from 'routes/Home';\r\nimport Navigation from \"components/Navigation\";\r\nimport Profile from 'routes/Profile';\r\n\r\nconst RouterHandle = ({refreshUser,isLoggedIn, userObj}) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj}/>}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n        <>\r\n        <Route exact path=\"/\">\r\n          <Home userObj={userObj}/>\r\n        </Route>\r\n        <Route exact path=\"/profile\">\r\n          <Profile refreshUser={refreshUser} userObj={userObj}/>\r\n        </Route>\r\n        </>\r\n        ) : (\r\n        <Route exact path=\"/\">\r\n          <Auth/>\r\n        </Route>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default RouterHandle;","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}