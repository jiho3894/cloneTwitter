{"version":3,"sources":["fbase.js","routes/Auth.js","routes/Home.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","auth","Auth","useState","email","setEmail","password","setPassword","newAccount","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","console","log","type","placeholder","required","Home","RouterHandle","isLoggedIn","exact","path","App","currentUser","Router","Date","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAYAA,IAASC,cATc,CACrBC,OAAQC,0CACRC,WAAYD,gCACZE,UAAWF,gBACXG,cAAeH,4BACfI,kBAAmBJ,eACnBK,MAAOL,8CAKF,IAAMM,EAAcT,IAASU,O,OCyCrBC,EApDF,WACX,MAA2BC,mBAAS,IAApC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAoCJ,oBAAS,GAA7C,mBAAOK,EAAP,KACMC,GADN,KACiB,SAACC,GAChB,MAAgCA,EAAzBC,OAASC,EAAhB,EAAgBA,KAAMC,EAAtB,EAAsBA,MACV,UAATD,EACDP,EAASQ,GACQ,aAATD,GACRL,EAAYM,KAGVC,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,yDACfL,EAAMM,iBADS,UAIVR,EAJU,gCAKER,EAAYiB,+BAA+Bb,EAAOE,GALpD,sDAOEN,EAAYkB,2BAA2Bd,EAAOE,GAPhD,yEAUba,QAAQC,IAAR,MAVa,0DAAH,sDAad,OACE,gCACE,uBAAMN,SAAUA,EAAhB,UACE,uBACEF,KAAK,QACLS,KAAK,OACLC,YAAY,QACZC,UAAQ,EAACV,MAAOT,EAChBK,SAAUA,IAEZ,uBACEG,KAAK,WACLS,KAAK,WACLC,YAAY,WACZC,UAAQ,EAACV,MAAOP,EAChBG,SAAUA,IAEZ,uBAAOY,KAAK,SAASR,MAAOL,EAAa,iBAAmB,cAE9D,8BACE,gEC7COgB,EADF,kBAAM,yCCuBJC,EApBM,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WACrB,OACE,cAAC,IAAD,UACE,cAAC,IAAD,UACGA,EACD,mCACA,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,QAIF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,WCFKC,EAVH,WACV,MAAoC1B,mBAASH,EAAY8B,aAAzD,mBAAOJ,EAAP,UACA,OACE,qCACA,cAACK,EAAD,CAAcL,WAAYA,IAC1B,4CAAgB,IAAIM,MAAOC,cAA3B,mBCNJC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f06194ca.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const authService = firebase.auth();","import { authService } from 'fbase';\r\nimport React, { useState } from 'react';\r\n\r\nconst Auth = () => {\r\n  const [email , setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(false);\r\n  const onChange = (event) => {\r\n    const {target: {name, value}} = event;\r\n    if(name === \"email\") {\r\n      setEmail(value);\r\n    } else if(name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  }\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if(newAccount) {\r\n        data = await authService.createUserWithEmailAndPassword(email, password);\r\n      } else {\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n    } catch(error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <form onSubmit={onSubmit}>\r\n        <input \r\n          name=\"email\" \r\n          type=\"text\" \r\n          placeholder=\"Email\" \r\n          required value={email} \r\n          onChange={onChange}\r\n        />\r\n        <input \r\n          name=\"password\" \r\n          type=\"password\" \r\n          placeholder=\"password\" \r\n          required value={password} \r\n          onChange={onChange}\r\n        />\r\n        <input type=\"submit\" value={newAccount ? \"create Account\" : \"Log In\"}/>\r\n      </form>\r\n      <div>\r\n        <button>Continue with Google</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Auth;","import React from 'react';\r\n\r\nconst Home = () => <span>Home</span>\r\nexport default Home;","import React from 'react';\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Auth from 'routes/Auth';\r\nimport Home from 'routes/Home';\r\n\r\nconst RouterHandle = ({isLoggedIn}) => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n        <>\r\n        <Route exact path=\"/\">\r\n          <Home/>\r\n        </Route>\r\n        </>\r\n        ) : (\r\n        <Route exact path=\"/\">\r\n          <Auth/>\r\n        </Route>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default RouterHandle;","import React, { useState } from \"react\";\nimport RouterHandle from \"components/Router\";\nimport {authService} from \"fbase\";\n\n\nconst App = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(authService.currentUser);\n  return (\n    <>\n    <RouterHandle isLoggedIn={isLoggedIn}/>\n    <footer>&copy; {new Date().getFullYear()} Nwitter </footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}