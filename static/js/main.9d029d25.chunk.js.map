{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/AccountForm.js","components/Router.js","components/GlobalStyles.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","Error","styled","div","ErrorText","Form","form","IDPW","input","Login","SLink","Link","Text","span","AuthForm","useState","email","setEmail","password","setPassword","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","signInWithEmailAndPassword","message","type","placeholder","required","to","Body","Container","Google","button","GitHub","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","onClick","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","prev","update","alt","src","width","height","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createAt","Date","now","creatorId","collection","add","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","nweetArray","docs","map","data","Navigation","displayName","Profile","refreshUser","newDisplayName","setNewDisplayName","history","useHistory","updateProfile","signOut","push","passwordCheck","setPasswordCheck","passwordError","setPasswordError","createUserWithEmailAndPassword","alert","onChangePasswordChk","e","minLength","RouterHandle","isLoggedIn","exact","path","component","AccountForm","GlobalStyles","createGlobalStyle","reset","body","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9d029d25.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import { authService } from 'fbase';\r\nimport React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst Error = styled.div`\r\n  height: 25px;\r\n  width: 390px;\r\n  border-radius: 3px;\r\n  text-align: center;\r\n  line-height: 25px;\r\n`;\r\n\r\nconst ErrorText = styled.div`\r\n  font-size: 13px;\r\n  font-weight: 600;\r\n  height: 25px;\r\n  width: 390px;\r\n  border-radius: 3px;\r\n  background: red;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  height: 200px;\r\n`;\r\n\r\nconst IDPW = styled.input`\r\n  font-size: 17px;\r\n  width: 220px;\r\n  height: 36px;\r\n  color: black;\r\n  outline: none;\r\n  background: none;\r\n  border: none;\r\n  border-bottom: 2px solid #95a5a6;\r\n  &:focus::-webkit-input-placeholder {\r\n    color:transparent;\r\n  }\r\n`;\r\n\r\nconst Login = styled.input`\r\n  width: 240px;\r\n  height: 40px;\r\n  font-size: 17px;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  border-radius: 10px;\r\n  outline: none;\r\n  border: none;\r\n  background: white;\r\n  margin:15px 0 15px 0;\r\n  &:hover {\r\n    box-shadow: 0px 0px 4px #666666 inset;\r\n  }\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  width: 240px;\r\n  height: 40px;\r\n  font-size: 17px;\r\n  font-weight: 600;\r\n  border-radius: 10px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  background-color: white;\r\n  &:hover {\r\n    box-shadow: 0px 0px 4px #666666 inset;\r\n  }\r\n  &:focus {\r\n    color: blue;\r\n  }\r\n`;\r\n\r\nconst Text = styled.span`\r\n  vertical-align: middle;\r\n  line-height: 40px;\r\n`;\r\n\r\nconst AuthForm = () => {\r\n  const [email , setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const onChange = (event) => {\r\n    const {target: { name, value }} = event;\r\n    if(name === \"email\") {\r\n      setEmail(value);\r\n    } else if(name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  }\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      await authService.signInWithEmailAndPassword(email, password);\r\n    } catch(error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Error>\r\n        {error && <ErrorText>\r\n          ID 혹은 비밀번호를 잘못 입력하셨거나 등록되지 않은 ID 입니다.\r\n        </ErrorText>}\r\n      </Error>\r\n      <Form onSubmit={onSubmit}>\r\n        <IDPW \r\n          name=\"email\" \r\n          type=\"text\" \r\n          placeholder=\"이메일\" \r\n          required value={email} \r\n          onChange={onChange}\r\n        />\r\n        <IDPW \r\n          name=\"password\" \r\n          type=\"password\" \r\n          placeholder=\"비밀번호\" \r\n          required value={password} \r\n          onChange={onChange}\r\n        />\r\n        <Login type=\"submit\" value=\"로그인\"></Login>\r\n        <SLink to=\"/Account\">\r\n          <Text>계정생성</Text>\r\n        </SLink>\r\n      </Form>\r\n    </>\r\n  )\r\n}\r\nexport default AuthForm;","import AuthForm from 'components/AuthForm';\r\nimport { authService, firebaseInstance } from 'fbase';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Body = styled.div`\r\n  font-size: 13px;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  width: 420px;\r\n  height: 420px;\r\n  border-radius: 18%;\r\n  background-color: gold;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Google = styled.button`\r\n  width: 60px;\r\n  height: 60px;\r\n  border-radius: 30px;\r\n  border: 0;\r\n  cursor: pointer;\r\n  background-color: white;\r\n  background-image: url(\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\");\r\n  background-repeat: no-repeat;\r\n  background-size: contain;\r\n  margin: 20px;\r\n`;\r\n\r\nconst GitHub = styled.button`\r\n  width: 60px;\r\n  height: 60px;\r\n  border-radius: 30px;\r\n  border: 0;\r\n  cursor: pointer;\r\n  background-color: white;\r\n  background-repeat: no-repeat;\r\n  background-size: contain;\r\n  background-image: url(\"https://upload.wikimedia.org/wikipedia/commons/4/4a/GitHub_Mark.png\");\r\n  margin: 20px;\r\n`;\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {target : {name} } = event;\r\n    let provider;\r\n    if(name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if(name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    await authService.signInWithPopup(provider);\r\n  };\r\n  \r\n  return (\r\n    <Body>\r\n      <Container>\r\n        <AuthForm />\r\n        <div>\r\n            <Google onClick={onSocialClick} name=\"google\"></Google>\r\n            <GitHub onClick={onSocialClick} name=\"github\"></GitHub>\r\n        </div>\r\n      </Container>\r\n    </Body>\r\n  );\r\n}\r\n\r\n\r\nexport default Auth;","import React, { useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"삭제하시겠습니까?\");\r\n    if (ok) {\r\n      await dbService.doc(`nweet/${nweetObj.id}`).delete();\r\n      if(nweetObj.attachmentUrl !== \"\"){\r\n        await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n      }\r\n    }\r\n  };\r\n\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`nweet/${nweetObj.id}`).update({\r\n      text: newNweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {target: { value } } = event;\r\n    setNewNweet(value);\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      {editing ? (\r\n        <>\r\n          {isOwner && (\r\n          <>\r\n            <form onSubmit={onSubmit}>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Edit your nweet\"\r\n                value={newNweet}\r\n                required\r\n                onChange={onChange}\r\n              />\r\n              <input type=\"submit\" value=\"Update Nweet\" />\r\n            </form>\r\n            <button onClick={toggleEditing}>Cancel</button>\r\n          </>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{nweetObj.text}</h4>\r\n          {nweetObj.attachmentUrl && <img alt=\"\" src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\"/> }\r\n          {isOwner && (\r\n            <>\r\n              <button onClick={onDeleteClick}>Delete Nweet</button>\r\n              <button onClick={toggleEditing}>Edit Nweet</button>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nweet;","import { dbService, storageService } from 'fbase';\r\nimport React, { useState } from 'react';\r\nimport {v4 as uuidv4 } from 'uuid';\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if(attachment !== \"\") {\r\n      const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n  const nweetObj = {\r\n    text: nweet,\r\n    createAt: Date.now(),\r\n    creatorId: userObj.uid,\r\n    attachmentUrl\r\n  }\r\n  await dbService.collection(\"nweet\").add(nweetObj);\r\n  setNweet(\"\");\r\n  setAttachment(\"\");\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {target: { value } } = event;\r\n    setNweet(value);\r\n  };\r\n\r\n  const onFileChange = (event) => {\r\n    const {target: {files}} = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    if(theFile) {\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {currentTarget : {result}} = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n    }\r\n  }\r\n\r\n  const onClearPhotoClick = () => setAttachment(\"\");\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <input\r\n        value={nweet}\r\n        onChange={onChange}\r\n        type=\"text\"\r\n        placeholder=\"What's on your mind?\"\r\n        maxLength={120}\r\n      />\r\n      <input type=\"file\" accept=\"image/*\" onChange={onFileChange}/>\r\n      <input type=\"submit\" value=\"Nweet\" />\r\n      {attachment && (\r\n        <div>\r\n          <img alt=\"\" src={attachment} width=\"50px\" height=\"50px\" />\r\n          <button onClick={onClearPhotoClick}>Clear</button>\r\n        </div>\r\n      )}\r\n    </form>\r\n  )\r\n}\r\nexport default NweetFactory;","import React, { useState, useEffect } from \"react\";\r\nimport { dbService } from \"fbase\";\r\nimport Nweet from 'components/Nweet';\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [nweets, setNweets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dbService.collection(\"nweet\").orderBy(\"createAt\",\"desc\").onSnapshot((snapshot) => {\r\n    const nweetArray = snapshot.docs.map((doc) => {\r\n      return { id: doc.id, ...doc.data() };\r\n    });\r\n      setNweets(nweetArray);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <NweetFactory userObj={userObj} />\r\n      <div>\r\n        {nweets.map((nweet) => (\r\n          <Nweet \r\n          key={nweet.id} \r\n          nweetObj={nweet} \r\n          isOwner={nweet.creatorId === userObj.uid}/>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Home;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Navigation = ({ userObj }) => (\r\n  <nav>\r\n    <ul>\r\n      <li>\r\n        <Link to=\"/Home\">자유토크</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/profile\">{userObj.displayName}님의 프로필</Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\n\r\nexport default Navigation;","import { authService } from 'fbase';\r\nimport React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Profile = ({ refreshUser, userObj }) => {\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const history = useHistory();\r\n\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const { target : {value} } = event;\r\n    setNewDisplayName(value);\r\n  }\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if(userObj.displayName !== newDisplayName){\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n  }\r\n\r\n  return(\r\n    <>\r\n      <form onSubmit={onSubmit} >\r\n        <input \r\n        onChange={onChange} value={newDisplayName} type=\"text\" placeholder=\"Display name\" />\r\n        <input  type=\"submit\" value=\"Update Profile\" />\r\n      </form>\r\n      <button onClick={onLogOutClick}>Log Out</button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;","import { authService } from 'fbase';\r\nimport React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst Error = styled.div`\r\n  height: 25px;\r\n  border-radius: 3px;\r\n  text-align: center;\r\n  line-height: 25px;\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst ErrorText = styled.div`\r\n  font-size: 15px;\r\n  color: white;\r\n  font-weight: 600;\r\n  height: 25px;\r\n  width: 240px;\r\n  border-radius: 3px;\r\n  background: red;\r\n`;\r\n\r\nconst Body = styled.div`\r\n  font-size: 13px;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  width: 420px;\r\n  height: 420px;\r\n  border-radius: 18%;\r\n  background-color: gold;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  height: 260px;\r\n`;\r\n\r\nconst IDPW = styled.input`\r\n  font-size: 17px;\r\n  width: 220px;\r\n  height: 36px;\r\n  color: black;\r\n  outline: none;\r\n  background: none;\r\n  border: none;\r\n  border-bottom: 2px solid #95a5a6;\r\n  &:focus::-webkit-input-placeholder {\r\n    color:transparent;\r\n  }\r\n`;\r\n\r\nconst Login = styled.button`\r\n  width: 240px;\r\n  height: 40px;\r\n  font-size: 17px;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  border-radius: 10px;\r\n  outline: none;\r\n  border: none;\r\n  background: white;\r\n  margin:15px 0 15px 0;\r\n  &:hover {\r\n    box-shadow: 0px 0px 4px #666666 inset;\r\n  }\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  width: 240px;\r\n  height: 40px;\r\n  font-size: 17px;\r\n  font-weight: 600;\r\n  border-radius: 10px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  background-color: white;\r\n  &:hover {\r\n    box-shadow: 0px 0px 4px #666666 inset;\r\n  }\r\n`;\r\n\r\nconst Text = styled.span`\r\n  vertical-align: middle;\r\n  line-height: 40px;\r\n`;\r\n\r\nconst AuthForm = () => {\r\n  const [email , setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordCheck,setPasswordCheck] = useState('');\r\n  const [passwordError,setPasswordError] = useState(false);\r\n\r\n  const onChange = (event) => {\r\n    const {target: { name, value }} = event;\r\n    if(name === \"email\") {\r\n      setEmail(value);\r\n    } else if(name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  }\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      \r\n      await authService.createUserWithEmailAndPassword(email, password);\r\n    } catch(error) {\r\n      if(password !== passwordCheck) {\r\n        return alert('비밀번호와 비밀번호확인은 같아야 합니다.')\r\n      }\r\n    }\r\n  };\r\n\r\n  const onChangePasswordChk = async (e) => {\r\n    setPasswordError(e.target.value !== password);\r\n    setPasswordCheck(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Body>\r\n      <Container>\r\n        <Form onSubmit={onSubmit}>\r\n          <IDPW \r\n            name=\"email\" \r\n            type=\"text\" \r\n            placeholder=\"이메일\" \r\n            required value={email} \r\n            onChange={onChange}\r\n          />\r\n          <IDPW \r\n            name=\"password\" \r\n            type=\"password\" \r\n            placeholder=\"비밀번호\" \r\n            required value={password} \r\n            onChange={onChange}\r\n            minLength=\"6\"\r\n          />\r\n          <IDPW \r\n            name=\"passwordCheck\" \r\n            type=\"password\" \r\n            placeholder=\"비밀번호 확인\" \r\n            value={passwordCheck}\r\n            required onChange={onChangePasswordChk}\r\n            minLength=\"6\"\r\n          />\r\n          <Error>\r\n            {passwordError && <ErrorText>\r\n              비밀번호가 일치하지 않습니다.\r\n            </ErrorText>}\r\n          </Error>\r\n          <Login type=\"submit\" >계정생성</Login>\r\n          <SLink to=\"/\">\r\n            <Text>돌아가기</Text>\r\n          </SLink>\r\n        </Form>\r\n      </Container>\r\n    </Body>\r\n  )\r\n}\r\nexport default AuthForm;","import React from 'react';\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Auth from 'routes/Auth';\r\nimport Home from 'routes/Home';\r\nimport Navigation from \"components/Navigation\";\r\nimport Profile from 'routes/Profile';\r\nimport AccountForm from './AccountForm';\r\n\r\n\r\nconst RouterHandle = ({ refreshUser, isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj}/>}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n        <>\r\n          <Route exact path=\"/Home\" component={Home}>\r\n            <Home userObj={userObj}/>\r\n          </Route>\r\n          <Route exact path=\"/profile\">\r\n            <Profile refreshUser={refreshUser} userObj={userObj}/>\r\n          </Route>\r\n        </>\r\n        ) : (\r\n          <>\r\n            <Route exact path=\"/\" component={Auth}>\r\n              <Auth/>\r\n            </Route>\r\n            <Route exact path=\"/Account\" component={AccountForm}>\r\n              <AccountForm/>\r\n            </Route>\r\n          </>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default RouterHandle;","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n    ${reset};\r\n\r\n    body{\r\n        width: 100%;\r\n        height: 100vh;\r\n        font-size: 20px;\r\n        background-color: yellow;\r\n        font-family: 'Noto Sans KR', sans-serif;\r\n    }\r\n`;\r\n\r\nexport default GlobalStyles;","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\nimport GlobalStyles from \"./GlobalStyles\";\nimport styled from \"styled-components\";\n\nconst Body = styled.body`\n  width: 100%;\n  height: 100vh;\n  padding: 0;\n  margin: 0;\n`;\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  \n  return (\n    <Body>\n      {init ? (\n        <>\n        <GlobalStyles />\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n        </>\n      ) : (\n        \"Initializing...\"\n      )}\n    </Body>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport globalStyles from 'components/GlobalStyles';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    <globalStyles />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}