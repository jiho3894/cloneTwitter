{"version":3,"sources":["fbase.js","routes/Auth.js","components/Nweet.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","Auth","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","type","placeholder","required","onClick","prev","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","toggleEditing","update","Home","userObj","nweet","setNweet","nweets","setNweets","useEffect","collection","onSnapshot","snapshot","nweetArray","docs","map","add","createAt","Date","now","creatorId","uid","maxLength","Navigation","to","Profile","history","useHistory","signOut","push","RouterHandle","isLoggedIn","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","Router","Boolean","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28f9a032.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\n\r\nexport const dbService = firebase.firestore();","import { authService, firebaseInstance } from 'fbase';\r\nimport React, { useState } from 'react';\r\n\r\nconst Auth = () => {\r\n  const [email , setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const onChange = (event) => {\r\n    const {target: {name, value}} = event;\r\n    if(name === \"email\") {\r\n      setEmail(value);\r\n    } else if(name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  }\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if(newAccount) {\r\n        data = await authService.createUserWithEmailAndPassword(email, password);\r\n      } else {\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n      console.log(data);\r\n    } catch(error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target : {name}\r\n    } = event;\r\n    let provider;\r\n    if(name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if(name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    await authService.signInWithPopup(provider);\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      <form onSubmit={onSubmit}>\r\n        <input \r\n          name=\"email\" \r\n          type=\"text\" \r\n          placeholder=\"이메일\" \r\n          required value={email} \r\n          onChange={onChange}\r\n        />\r\n        <input \r\n          name=\"password\" \r\n          type=\"password\" \r\n          placeholder=\"비밀번호\" \r\n          required value={password} \r\n          onChange={onChange}\r\n        />\r\n        <input type=\"submit\" value={newAccount ? \"계정생성\" : \"로그인\"}/>\r\n        {error}\r\n      </form>\r\n      <span onClick={toggleAccount}>{!newAccount ? \"계정생성\" : \"로그인\"}</span>\r\n      <div>\r\n        <button onClick={onSocialClick} name=\"google\">구글 아이디로 로그인</button>\r\n        <button onClick={onSocialClick} name=\"github\">깃허브 아이디로 로그인</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Auth;","import React, { useState } from \"react\";\r\nimport { dbService } from \"fbase\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"삭제하시겠습니까?\");\r\n    if (ok) {\r\n      await dbService.doc(`nweet/${nweetObj.id}`).delete();\r\n    }\r\n  };\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`nweet/${nweetObj.id}`).update({\r\n      text: newNweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewNweet(value);\r\n  };\r\n  return (\r\n    <div>\r\n      {editing ? (\r\n        <>\r\n          {isOwner && (\r\n          <>\r\n            <form onSubmit={onSubmit}>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Edit your nweet\"\r\n                value={newNweet}\r\n                required\r\n                onChange={onChange}\r\n              />\r\n              <input type=\"submit\" value=\"Update Nweet\" />\r\n            </form>\r\n            <button onClick={toggleEditing}>Cancel</button>\r\n          </>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{nweetObj.text}</h4>\r\n          {isOwner && (\r\n            <>\r\n              <button onClick={onDeleteClick}>Delete Nweet</button>\r\n              <button onClick={toggleEditing}>Edit Nweet</button>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nweet;","import React, { useState, useEffect } from \"react\";\r\nimport { dbService } from \"fbase\";\r\nimport Nweet from 'components/Nweet';\r\n\r\nconst Home = ({userObj}) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [nweets, setNweets] = useState([]);\r\n  useEffect(() => {\r\n    dbService.collection(\"nweet\").onSnapshot((snapshot) => {\r\n      const nweetArray = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setNweets(nweetArray);\r\n    });\r\n  }, []);\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.collection(\"nweet\").add({\r\n      text: nweet,\r\n      createAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n    });\r\n    setNweet(\"\");\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNweet(value);\r\n  };\r\n  return (\r\n    <div>\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          value={nweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"Nweet\" />\r\n      </form>\r\n      <div>\r\n        {nweets.map((nweet) => (\r\n          <Nweet \r\n          key={nweet.id} \r\n          nweetObj={nweet} \r\n          isOwner={nweet.creatorId === userObj.uid}/>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Home;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Navigation = () => (\r\n  <nav>\r\n    <ul>\r\n      <li>\r\n        <Link to=\"/\">Home</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/profile\">My Profile</Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n\r\n\r\n);\r\n\r\nexport default Navigation;","import { authService } from 'fbase';\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Profile = () => {\r\n  const history = useHistory();\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  }\r\n  return(\r\n    <>\r\n      <button onClick={onLogOutClick}>Log Out</button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Auth from 'routes/Auth';\r\nimport Home from 'routes/Home';\r\nimport Navigation from \"components/Navigation\";\r\nimport Profile from 'routes/Profile';\r\n\r\nconst RouterHandle = ({isLoggedIn, userObj}) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation/>}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n        <>\r\n        <Route exact path=\"/\">\r\n          <Home userObj={userObj}/>\r\n        </Route>\r\n        <Route exact path=\"/profile\">\r\n          <Profile/>\r\n        </Route>\r\n        </>\r\n        ) : (\r\n        <Route exact path=\"/\">\r\n          <Auth/>\r\n        </Route>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default RouterHandle;","import React, { useEffect, useState } from \"react\";\nimport RouterHandle from \"components/Router\";\nimport {authService} from \"fbase\";\n\nconst App = () => {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n    if(user) {\n      setUserObj(user);\n    } else {\n    } \n    setInit(true);\n  });\n  }, []);\n  return (\n    <>\n    {init ? <RouterHandle isLoggedIn={Boolean(userObj)} userObj={userObj}/> : \"로딩중...\"}\n    <footer>&copy; {new Date().getFullYear()} Nwitter </footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}